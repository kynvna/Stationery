@model StationeryWEB.Models.OrderDetail

@{
    ViewData["Title"] = "Create Order Detail";
    Layout = "~/Views/Shared/_DealerLayout.cshtml";
}

<div class="row">
   <div class="col-md-8">
        <div class="ibox">
            <div class="ibox-body">
                <form id="orderDetailForm">
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <label for="orderId">Mã đơn</label>
                            <input class="form-control" type="text" id="orderId" name="orderId" required placeholder="Mã đơn">
                        </div>
                        <div class="form-group col-sm-6">
                            <label for="productId">Mã SP</label>
                            <input class="form-control" type="text" id="productId" name="productId" placeholder="Mã sp" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6 form-group">
                            <label for="quantity">Số lượng</label>
                            <input class="form-control" type="text" id="quantity" name="quantity" required placeholder="Số lượng">
                        </div>
                        <div class="form-group col-sm-6">
                            <label for="discount">Giảm giá</label>
                            <input class="form-control" type="number" id="discount" name="discount" required step="0.01" placeholder="Tổng giá" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 form-group">
                            <label for="totalAmount">Tổng giá</label>
                            <input class="form-control" type="number" id="totalAmount" name="totalAmount" required placeholder="Tổng giá" />
                        </div>
                    </div>
                    <div class="form-group">
                        <button class="btn btn-success btn-rounded" type="submit">Submit</button>
                    </div>
                </form>
            </div>
        </div>
   </div>
</div>



@section Scripts {
    <script>
        document.getElementById('orderDetailForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Gather form data into an orderDetail object
            var orderDetail = {
                orderId: document.getElementById('orderId').value,
                productId: document.getElementById('productId').value,
                quantity: parseInt(document.getElementById('quantity').value, 10),
                discount: parseFloat(document.getElementById('discount').value) || null,
                totalAmount: parseFloat(document.getElementById('totalAmount').value) || null
            };

            try {
                const response = await fetch('https://localhost:7106/api/Customer/CreateOrderDetail', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(orderDetail)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    console.error('Failed to create order detail:', errorData);
                    document.getElementById('orderDetailResult').textContent = 'Failed to create order detail: ' + JSON.stringify(errorData);
                } else {
                    const createdOrderDetail = await response.json();
                    console.log('Order detail created:', createdOrderDetail);

                    document.getElementById('orderDetailResult').innerHTML = `
                                                <h3>Order Detail Created Successfully!</h3>
                                                <div><strong>Detail ID:</strong> ${createdOrderDetail.detailId}</div>
                                                <div><strong>Order ID:</strong> ${createdOrderDetail.orderId}</div>
                                                <div><strong>Product ID:</strong> ${createdOrderDetail.productId}</div>
                                                <div><strong>Quantity:</strong> ${createdOrderDetail.quantity}</div>
                                                <div><strong>Discount:</strong> ${createdOrderDetail.discount ? createdOrderDetail.discount.toFixed(2) : 'N/A'}</div>
                                                <div><strong>Total Amount:</strong> ${createdOrderDetail.totalAmount ? createdOrderDetail.totalAmount.toFixed(2) : 'N/A'}</div>
                                            `;
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('orderDetailResult').textContent = 'An error occurred while sending the order detail.';
            }
        });
    </script>
}
