@model StationeryWEB.Models.OrderViewModel

@{
    ViewData["Title"] = "Get Order by Dealer";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="row">
    <div class="col-md-12">
        <div class="ibox">
            <div class="ibox-head">
                <div class="ibox-title">Tra cứu đơn hàng theo người bán</div>
            </div>
            <div class="ibox-body">
                <form method="post" class="form-inline" id="GetOrderByDealer">
                    <label class="sr-only" for="dealerId">Mã người bán</label>
                    <input class="form-control mb-2 mr-sm-2 mb-sm-0" type="text" name="dealerId" id="dealerId" placeholder="Nhập tên người bán">
                    <button class="btn btn-success" type="submit">Tìm kiếm</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Simplified Filter Form -->

<div class="row">
    <div class="col-xl-12">
        <div class="ibox">
            <div class="ibox-head">
                <div class="ibox-title">Kết quả tìm kiếm</div>
            </div>
            <div class="ibox-body">
                <table class="table">
                    <thead class="thead-default">
                        <tr>
                            <th>ID đơn hàng</th>
                            <th>Mã khách hàng</th>
                            <th>Mã sản phẩm</th>
                            <th>Ngày đặt hàng</th>
                            <th>Đơn giá</th>
                            <th>Trạng thái đơn</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Orders != null)
                        {
                            @foreach (var item in Model.Orders)
                            {
                                <tr>
                                    <td>@item.OrderId</td>
                                    <td>@item.CustomerId</td>
                                    <td>@item.productId</td>
                                    <td>@item.OrderDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                    <td>@item.TotalPrice</td>
                                    <td>@item.OrderStatus</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <p>No orders found or data is incomplete.</p>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Pagination and script remain unchanged -->
<div class="row">
   <div class="col-md-12">
        Page @Model.CurrentPage of @Model.TotalPages

        @if (Model.CurrentPage > 1)
        {
            <button onclick="goToPage(@(Model.CurrentPage - 1))">Previous</button>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <button type="button" onclick="goToPage(@(Model.CurrentPage + 1))">Next</button>
        }
   </div>
</div>

<script>
    function goToPage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);
        const pageSize = document.querySelector('select[name="pageSize"]').value;
        const dealerId = document.getElementById('dealerId').value;
        url.searchParams.set('pageSize', pageSize);
        if (dealerId) {
            url.searchParams.set('dealerId', dealerId);
        }
        window.location.href = url.href;
    }
</script>

<div>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <button type="button" onclick="goToPage(@i)">@i</button>
    }
</div>

<div>
    <form method="get">
        <label for="pageSize">Products per page:</label>
        <select name="pageSize" onchange="this.form.submit()">
            <option selected="selected" value="@Model.PageSize">@Model.PageSize</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
        <input type="hidden" name="dealerId" id="hiddenDealerId" />
    </form>
</div>

<script>
    // Set the hidden field's value based on the URL parameter
    // This script should be placed at the end of the body
    document.addEventListener("DOMContentLoaded", function () {
        const urlParams = new URLSearchParams(window.location.search);
        const dealerId = urlParams.get('dealerId');
        if (dealerId) {
            document.getElementById('dealerId').value = dealerId; // For the text input
            document.getElementById('hiddenDealerId').value = dealerId; // For the hidden input in pagination
        }
    });
</script>
