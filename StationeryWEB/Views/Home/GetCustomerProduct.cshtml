@model CustomerProductViewModel

@{
    ViewData["Title"] = "CustomerProduct";
    Layout = "~/Views/Shared/_DealerLayout.cshtml";
}


<div class="row">
    <div class="col-md-12">
        <div class="ibox">
            <div class="ibox-head">
                <div class="ibox-title">Danh sách sản phẩm upload bởi người bán</div>
            </div>
            <div class="ibox-body">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>ID Khách</th>
                                <th>ID Sản phẩm</th>
                                <th>Giá</th>
                                <th>Trạng thái</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.CustomerProducts)
                            {
                               <tr>
                                    <td>@item.CustomerId</td>
                                    <td>@item.ProductId</td>
                                    <td>@item.Price</td>
                                    <td>@item.Status</td>
                                    <td><a href="/Home/CreateOrderFromProduct?cusid=@item.CustomerId&proid=@item.ProductId&price=@item.Price&status=@item.Status">Tạo đơn cho khách này</a></td>
                               </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    Page @Model.CurrentPage of @Model.TotalPages

    @if (Model.CurrentPage > 1)
    {
        <button onclick="goToPage(@(Model.CurrentPage - 1))">Previous</button>
    }

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <button type="button" onclick="goToPage(@(Model.CurrentPage + 1))">Next</button>
    }
</div>

<script>
    function goToPage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);
        // Preserve the pageSize selection when navigating pages
        const pageSize = document.querySelector('select[name="pageSize"]').value;
        url.searchParams.set('pageSize', pageSize);
        console.log(url.href);
        window.location.href = url.href; // Navigate with the new query parameters.
    }
</script>

<div>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <button type="button" onclick="goToPage(@i)">@i</button>
    }
</div>

<div>
    <form method="get">
        <label for="pageSize">CustomerProducts per page:</label>
        <select name="pageSize" onchange="this.form.submit()">
            <option selected="selected" value="@Model.PageSize">@Model.PageSize</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
    </form>
</div>