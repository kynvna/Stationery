@model DeliveryViewModel

@{
    ViewData["Title"] = "Delivery";
    Layout = "~/Views/Shared/_DealerLayout.cshtml";
}


<div class="row">
    <div class="col-xl-12">
        <div class="ibox">
            <div class="ibox-head">
                <form class="form-inline" method="post" id="DeliveriesByDealerId">
                    <label class="sr-only" for="dealerId">Mã người bán</label>
                    <input class="form-control mb-2 mr-sm-2 mb-sm-0" type="hidden" name="dealerId" id="dealerId" placeholder="Nhập tên người bán">
                    <button class="btn btn-success btn-rounded" type="submit">Tải các đơn hàng cần giao của bạn</button>
                </form>
            </div>
            <div class="ibox-body">
                <table class="table">
                    <thead class="thead-default">
                        <tr>
                            <th>Mã vận chuyển</th>
                            <th>Mã đơn hàng</th>
                            <th>Ngày giao hàng</th>
                            <th>Trạng thái giao hàng</th>
                            <th>Phí giao hàng</th>
                            <th>Người giao hàng</th>
                            <th colspan="2">Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Deliveries != null)
                        {
                            @foreach (var item in Model.Deliveries)
                            {
                                <tr>
                                    <td>@item.DeliveryId</td>
                                    <td>@item.OrderId</td>
                                    <td>@item.DeliveryDate</td>
                                    <td>@item.DeliveryStatus</td>
                                    <td>@item.DeliveryFee</td>
                                    <td>@item.CarrierName</td>
                                    <td>
                                        <button class="btn btn-danger btn-rounded" onclick="deleteDelivery('@item.DeliveryId');">Xóa</button><br />
                                    </td>
                                    <td>
                                        <a class="btn btn-info btn-rounded" href="/Home/UpdateDelivery?id=@item.DeliveryId">Chỉnh sửa</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <p>No orders found or data is incomplete.</p>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Pagination and script remain unchanged -->

<div>
    Page @Model.CurrentPage of @Model.TotalPages

    @if (Model.CurrentPage > 1)
    {
        <button onclick="goToPage(@(Model.CurrentPage - 1))">Previous</button>
    }

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <button type="button" onclick="goToPage(@(Model.CurrentPage + 1))">Next</button>
    }
</div>

<script>
    function goToPage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);
        const pageSize = document.querySelector('select[name="pageSize"]').value;
        const dealerId = document.getElementById('dealerId').value;
        url.searchParams.set('pageSize', pageSize);
        if (dealerId) {
            url.searchParams.set('dealerId', dealerId);
        }
        window.location.href = url.href;
    }
</script>

<div>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <button type="button" onclick="goToPage(@i)">@i</button>
    }
</div>

<div>
    <form method="get">
        <label for="pageSize">Products per page:</label>
        <select name="pageSize" onchange="this.form.submit()">
            <option selected="selected" value="@Model.PageSize">@Model.PageSize</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
      
        <input type="hidden" name="dealerId" id="hiddenDealerId" />
    </form>
</div>

<script>
    // Set the hidden field's value based on the URL parameter
    // This script should be placed at the end of the body
    document.addEventListener("DOMContentLoaded", function () {
        const urlParams = new URLSearchParams(window.location.search);
        const dealerId = urlParams.get('dealerId');
        if (dealerId) {
            document.getElementById('dealerId').value = dealerId; // For the text input
            document.getElementById('hiddenDealerId').value = dealerId; // For the hidden input in pagination
        }
    });
</script>
<script>
    async function deleteDelivery(deliveryId) {
        if (confirm('Are you sure you want to delete this delivery?')) {
            try {
                const response = await fetch(`https://localhost:7106/api/Customer/DeleteDelivery/${deliveryId}`, {
                    method: 'DELETE',
                    headers: {
                        'Accept': 'application/json',
                    }
                });
                if (!response.ok) {
                    alert('Failed to delete delivery: ' + await response.text());
                } else {
                    alert('Delivery deleted !!');
                    location.reload();
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while deleting the delivery.' + error);
            }
        }
    }
</script>
