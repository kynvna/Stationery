@model StationeryAPI.ShoppingModels.UpdateCustomerProduct

@{
    ViewData["Title"] = "Create CustomerProduct";
}

<h2>Update CustomerProduct</h2>

<form id="customerproductForm">
    <div>
        <label for="CustomerId">Customer Id:</label>
        <input type="text" id="custId" name="Address" required>
    </div>
    <div>
        <label for="Address">Customer Address:</label>
        <input type="text" id="Address" name="Address" required>
    </div>
    <div>
        <label for="productId">Product ID:</label>
        <input type="text" id="ProId" name="ProId" required>
    </div>
    <div>
        <label for="Price">Price:</label>
        <input type="number" id="Price" name="Price" required step="0.01">
    </div>

    <div>
        <label for="Fullname">Full Name:</label>
        <input type="text" id="Fullname" name="Fullname" required>
    </div>
    <div>
        <label for="Tel">Telephone:</label>
        <input type="text" id="Tel" name="Tel" required>
    </div>
    <div>
        <label for="Status">Status:</label>
        <input type="text" id="Status" name="Status" required>
    </div>
    <button class="btn btn-info btn-rounded" type="submit">Cập nhật</button>
</form>

<div id="customerproductResult"></div>

@section Scripts {
    <script>
        document.getElementById('customerproductForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission

            var customerproduct = {
                // Changed from customerId to CustId
                ProId: document.getElementById('ProId').value, // Changed from productId to ProId
                Price: parseFloat(document.getElementById('Price').value),
                custId: document.getElementById('custId').value,
                Address: document.getElementById('Address').value,
                FullName: document.getElementById('Fullname').value,
                Tel: document.getElementById('Tel').value,
                Status: document.getElementById('Status').value,
            };

            try {
                console.log('Form data being sent:', customerproduct);

                const response = await fetch('https://localhost:7106/api/Customer/UpdateCustomerProduct', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(customerproduct)


                });
                console.log('Response status:', response.status);
                if (!response.ok) {
                    const errorData = await response.json();
                    console.error('Failed to update customerproduct:', errorData);
                    document.getElementById('customerproductResult').textContent = 'Failed to create customerproduct: ' + JSON.stringify(errorData);
                } else {
                    // Inside your fetch's 'else' block
                    const updatedCustomerProduct = await response.json();
                    console.log('CustomerProduct updated:', updatedCustomerProduct);
                    document.getElementById('customerproductResult').innerHTML = `
                    <h3>CustomerProduct Updated Successfully!</h3>
                            <div><strong>Customer ID:</strong> ${updatedCustomerProduct.customerId}</div>
                            <div><strong>Product ID:</strong> ${updatedCustomerProduct.productId || 'N/A'}</div>
                                    <div><strong>Price:</strong> ${updatedCustomerProduct.price ? updatedCustomerProduct.price.toFixed(2) : 'N/A'}</div>
                            <div><strong>Status:</strong> ${updatedCustomerProduct.status || 'N/A'}</div>
                `;

                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('customerproductResult').textContent = 'An error occurred while sending the customerproduct.';
            }
        });


    </script>
}


