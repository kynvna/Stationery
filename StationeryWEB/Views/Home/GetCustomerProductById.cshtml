@model StationeryAPI.ShoppingModels.TblCustomerProduct

@{
    ViewData["Title"] = "Get CustomerProduct by ID and Display";
    Layout = "~/Views/Shared/_DealerLayout.cshtml";
}

<h2>CustomerProduct</h2>

<!-- Search Form -->
<form id="GetCustomerProductForm">
    <label for="customerId">Customer ID:</label>
    <input type="number" id="customerId" />
    <label for="productId">Product ID:</label>
    <input type="number" id="productId" />
    <button type="submit">Find CustomerProduct</button>
</form>

<!-- Placeholder for CustomerProduct Details -->
<div id="customerproductResult"></div>

@section Scripts {
    <script>
        document.getElementById('GetCustomerProductForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission
            var customerId = document.getElementById('customerId').value; // Get the customer ID from the input
            var productId = document.getElementById('productId').value; // Get the product ID from the input
            // Fetch customerproduct details
            try {
                const response = await fetch(`https://localhost:7106/api/Customer/GetCustomerProductById/${customerId}/${productId}`, {
                    method: 'GET', // Use GET method to fetch data
                    headers: {
                        'Accept': 'application/json', // Expect a JSON response
                    }
                });

                if (!response.ok) {
                    // Handle response errors
                    document.getElementById('customerproductResult').textContent = 'Failed to fetch customerproduct: ' + await response.text();
                } else {
                    const customerproduct = await response.json(); // Parse JSON response into JavaScript object
                    // Update the 'customerproductResult' div with fetched customerproduct details
                    document.getElementById('customerproductResult').innerHTML = `
                                <h3>CustomerProduct Details:</h3>
                                <div><strong>Customer ID:</strong> ${customerproduct.customerId}</div>
                                <div><strong>Product ID:</strong> ${customerproduct.productId}</div>
                                <div><strong>Price:</strong> ${customerproduct.price}</div>
                                <div><strong>Status:</strong> ${customerproduct.status}</div>
                                <!-- Add more fields as necessary -->
                                <!-- Direct Delete Button within CustomerProduct Information -->
                                <button onclick="deleteCustomerProduct('${customerproduct.customerId}', '${customerproduct.productId}');">Delete This CustomerProduct</button>
                            `;
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('customerproductResult').textContent = 'An error occurred while fetching the customerproduct.';
            }
        });

        async function deleteCustomerProduct(customerId, productId) {
            if (confirm('Are you sure you want to delete this customerproduct?')) {
                try {
                    const response = await fetch(`https://localhost:7106/api/Customer/DeleteCustomerProduct/${customerId}/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Accept': 'application/json',
                        }
                    });

                    if (!response.ok) {
                        alert('Failed to delete customerproduct: ' + await response.text());
                    } else {
                        document.getElementById('customerproductResult').textContent = 'CustomerProduct deleted successfully';
                        // Optionally clear the input fields or refresh the page
                        document.getElementById('customerId').value = '';
                        document.getElementById('productId').value = '';
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the customerproduct.');
                }
            }
        }
    </script>
}
