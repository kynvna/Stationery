@model DeliveryViewModel

@{
    ViewData["Title"] = "Delivery";
}

<h2>Deliveries</h2>

@foreach (var item in Model.Deliveries)
{
    <div>@item.DeliveryId</div>
    <div>@item.OrderId</div>
    <div>@item.DeliveryDate</div>
    <div>@item.DeliveryStatus</div>
    <div>@item.DeliveryFee</div>
    <div>@item.CarrierName</div>
    
}

<div>
    Page @Model.CurrentPage of @Model.TotalPages

    @if (Model.CurrentPage > 1)
    {
        <button onclick="goToPage(@(Model.CurrentPage - 1))">Previous</button>
    }

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <button type="button" onclick="goToPage(@(Model.CurrentPage + 1))">Next</button>
    }
</div>

<script>
    function goToPage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);
        // Preserve the pageSize selection when navigating pages
        const pageSize = document.querySelector('select[name="pageSize"]').value;
        url.searchParams.set('pageSize', pageSize);
        console.log(url.href);
        window.location.href = url.href; // Navigate with the new query parameters.
    }
</script>

<div>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <button type="button" onclick="goToPage(@i)">@i</button>
    }
</div>

<div>
    <form method="get">
        <label for="pageSize">Products per page:</label>
        <select name="pageSize" onchange="this.form.submit()">
            <option selected="selected" value="@Model.PageSize">@Model.PageSize</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>
    </form>
</div>