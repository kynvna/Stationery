@model StationeryWEB.Models.CustomerProductViewModel

@{
    ViewData["Title"] = "Get CustomerProduct by Dealer";
    Layout = "~/Views/Shared/_DealerLayout.cshtml";
}
@if (Model.CustomerProducts != null)
{
    <div class="row">
        <div class="col-md-12">
            <div class="ibox">
                <div class="ibox-head">
                    <form method="post" id="GetCustomerProductByDealer">
                        <button class="btn btn-success btn-rounded" type="submit">Tải danh sách offer giá từ khách</button>
                    </form>
                </div>
                <div class="ibox-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>ID Khách</th>
                                    <th>ID Sản phẩm</th>
                                    <th>Giá</th>
                                    <th>Trạng thái</th>
                                    <th>Tạo đơn</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.CustomerProducts)
                                {
                                    <tr>
                                        <td>@item.CustomerId</td>
                                        <td>@item.ProductId</td>
                                        <td>@item.Price</td>
                                        <td>@item.Status</td>
                                        <td><a class="btn btn-info btn-rounded" href="/Home/CreateOrderFromProduct?cusid=@item.CustomerId&proid=@item.ProductId&price=@item.Price&status=@item.Status">Tạo đơn cho khách này</a></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
else
{
    <p>No orders found or data is incomplete.</p>
}



<!-- Pagination and script remain unchanged -->

<div>
    Page @Model.CurrentPage of @Model.TotalPages

    @if (Model.CurrentPage > 1)
    {
        <button onclick="goToPage(@(Model.CurrentPage - 1))">Previous</button>
    }

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <button type="button" onclick="goToPage(@(Model.CurrentPage + 1))">Next</button>
    }
</div>

<script>
    function goToPage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);
        const pageSize = document.querySelector('select[name="pageSize"]').value;
        const dealerId = document.getElementById('dealerId').value;
        url.searchParams.set('pageSize', pageSize);
        if (dealerId) {
            url.searchParams.set('dealerId', dealerId);
        }
        window.location.href = url.href;
    }
</script>

<div>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <button type="button" onclick="goToPage(@i)">@i</button>
    }
</div>

<div>
    <form method="get">
        <label for="pageSize">Products per page:</label>
        <select name="pageSize" onchange="this.form.submit()">
            <option selected="selected" value="@Model.PageSize">@Model.PageSize</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="20">20</option>
        </select>

        <input type="hidden" name="dealerId" id="hiddenDealerId" />
    </form>
</div>

<script>
    // Set the hidden field's value based on the URL parameter
    // This script should be placed at the end of the body
    document.addEventListener("DOMContentLoaded", function () {
        const urlParams = new URLSearchParams(window.location.search);
        const dealerId = urlParams.get('dealerId');
        if (dealerId) {
            document.getElementById('dealerId').value = dealerId; // For the text input
            document.getElementById('hiddenDealerId').value = dealerId; // For the hidden input in pagination
        }
    });
</script>
