@model StationeryAPI.ShoppingModels.TblOrder

@{
    ViewData["Title"] = "Get Order by ID and Display";
}

<h2>Orders</h2>

<!-- Search Form -->
<form id="GetOrderForm">
    <label for="orderId">Order ID:</label>
    <input type="text" id="orderId" />
    <button type="submit">Find Order</button>
</form>

<!-- Placeholder for Order Details -->
<div id="orderResult"></div>

@section Scripts {
    <script>
        document.getElementById('GetOrderForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission
            var orderId = document.getElementById('orderId').value; // Get the order ID from the input

            // Fetch order details
            try {
                const response = await fetch(`https://localhost:7106/api/Customer/GetOrder/${orderId}`, {
                    method: 'GET', // Use GET method to fetch data
                    headers: {
                        'Accept': 'application/json', // Expect a JSON response
                    }
                });

                if (!response.ok) {
                    // Handle response errors
                    document.getElementById('orderResult').textContent = 'Failed to fetch order: ' + await response.text();
                } else {
                    const order = await response.json(); // Parse JSON response into JavaScript object
                    // Update the 'orderResult' div with fetched order details
                    document.getElementById('orderResult').innerHTML = `
                                <h3>Order Details:</h3>
                                <div><strong>Order ID:</strong> ${order.orderId}</div>
                                <div><strong>Customer ID:</strong> ${order.customerId}</div>
                                <!-- Add more fields as necessary -->

                                <!-- Direct Delete Button within Order Information -->
                                <button onclick="deleteOrder('${order.orderId}');">Delete This Order</button>
                            `;
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('orderResult').textContent = 'An error occurred while fetching the order.';
            }
        });

        async function deleteOrder(orderId) {
            if (confirm('Are you sure you want to delete this order?')) {
                try {
                    const response = await fetch(`https://localhost:7106/api/Customer/DeleteOrder/${orderId}`, {
                        method: 'DELETE',
                        headers: {
                            'Accept': 'application/json',
                        }
                    });

                    if (!response.ok) {
                        alert('Failed to delete order: ' + await response.text());
                    } else {
                        document.getElementById('orderResult').textContent = 'Order deleted successfully';
                        // Optionally clear the input field or refresh the page
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the order.');
                }
            }
        }
    </script>
}
