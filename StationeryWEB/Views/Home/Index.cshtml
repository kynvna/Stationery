@model ProductPageViewModel

@{
    ViewData["Title"] = "Index";
}
<div class="row">
    <div class="container mt-5 mb-5">
        <div class="d-flex justify-content-center row">
            <div class="col-md-10">
                @foreach(var item in Model.Products)
                {
                    <div class="row p-2 bg-white border rounded mt-2">
                        <div class="col-md-3 mt-1"><img class="img-fluid img-responsive rounded product-image" src="@item.ImageLink"></div>
                        <div class="col-md-6 mt-1">
                            <h5>@item.ProName</h5>
                            <div class="d-flex flex-row">
                                <div class="ratings mr-2"><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i></div><span>310</span>
                            </div>
                        </div>
                        <div class="align-items-center align-content-center col-md-3 border-left mt-1">
                            <div class="d-flex flex-row align-items-center">
                                <h4 class="mr-1">$@item.Price</h4>
                            </div>
                            <h6 class="text-success">Free shipping</h6>
                            <a class="d-flex flex-column mt-4 btn btn-success btn-rounded" href="/Home/ProductDetails?id=@item.ProId">Mua ngay</a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
       

   
</div>


<div class="clear"></div>

<div>
    Page @Model.CurrentPage of @Model.TotalPages

    @if (Model.CurrentPage > 1)
    {
        <button onclick="goToPage(@(Model.CurrentPage - 1))">Previous</button>
    }

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <button type="button" onclick="goToPage(@(Model.CurrentPage + 1))">Next</button>
    }
</div>

<script>
    function goToPage(page) {
        const url = new URL(window.location);
        url.searchParams.set('page', page);
        // Preserve the pageSize selection when navigating pages
        const pageSize = document.querySelector('select[name="pageSize"]').value;
        url.searchParams.set('pageSize', pageSize);
        console.log(url.href);
        window.location.href = url.href; // Navigate with the new query parameters.
    }
</script>

<div>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <button type="button" onclick="goToPage(@i)">@i</button>
    }
</div>

<div>
    <form method="get">
        <label for="pageSize">Products per page:</label>
        <select name="pageSize" onchange="this.form.submit()">
            <option value="4">4</option>
            <option  value="8">8</option>
            <option  value="12">12</option>
        </select>
    </form>
</div>

