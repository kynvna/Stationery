@model StationeryAPI.ShoppingModels.TblDelivery

@{
    ViewData["Title"] = "Get Delivery by ID and Display";
}

<h2>Orders</h2>

<!-- Search Form -->
<form id="GetDeliveryForm">
    <label for="deliveryId">Delivery ID:</label>
    <input type="text" id="deliveryId" />
    <button type="submit">Find Delivery</button>
</form>

<!-- Placeholder for Order Details -->
<div id="deliveryResult"></div>

@section Scripts {
    <script>
        document.getElementById('GetDeliveryForm').addEventListener('submit', async function (event) {
            event.preventDefault(); // Prevent the default form submission
            var deliveryId = document.getElementById('deliveryId').value; // Get the order ID from the input

            // Fetch order details
            try {
                const response = await fetch(`https://localhost:7106/api/Customer/GetDelivery/${deliveryId}`, {
                    method: 'GET', // Use GET method to fetch data
                    headers: {
                        'Accept': 'application/json', // Expect a JSON response
                    }
                });

                if (!response.ok) {
                    // Handle response errors
                    document.getElementById('deliveryResult').textContent = 'Failed to fetch order: ' + await response.text();
                } else {
                    const delivery = await response.json(); // Parse JSON response into JavaScript object
                    // Update the 'orderResult' div with fetched order details
                    document.getElementById('deliveryResult').innerHTML = `
                                        <h3>Delivery Details:</h3>
                                        <div><strong>Delivery ID:</strong> ${delivery.deliveryId}</div>
                                        <div><strong>Order ID:</strong> ${delivery.orderId}</div>
                                        <!-- Add more fields as necessary -->

                                        <!-- Direct Delete Button within Order Information -->
                                        <button onclick="deleteDelivery('${delivery.deliveryId}');">Delete This Delivery</button>
                                    `;
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('deliveryResult').textContent = 'An error occurred while fetching the order.';
            }
        });

        async function deleteDelivery(deliveryId) {
            if (confirm('Are you sure you want to delete this delivery?')) {
                try {
                    const response = await fetch(`https://localhost:7106/api/Customer/DeleteDelivery/${deliveryId}`, {
                        method: 'DELETE',
                        headers: {
                            'Accept': 'application/json',
                        }
                    });

                    if (!response.ok) {
                        alert('Failed to delete delivery: ' + await response.text());
                    } else {
                        document.getElementById('deliveryResult').textContent = 'Delivery deleted successfully';
                        // Optionally clear the input field or refresh the page
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the order.');
                }
            }
        }
    </script>
}
